/* MIXINS.SCSS */


// ANIMATIONS
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

// A
@mixin animate ($property: all, $time: .3s, $curve:ease-out){
  -webkit-transition: $property $time $curve;
  -moz-transition: $property $time $curve;
  -ms-transition: $property $time $curve;
  -o-transition: $property $time $curve;
  transition: $property $time $curve;
}

// B

@mixin border-radius($position, $radius: $default_radius) {
  border-#{$position}-radius: $radius;
  -webkit-border-#{$position}-radius: $radius;
}
@mixin box-shadow($top: 0px, $left: 0px, $blur:.5em, $spread: .2em, $color: transparentize($cGray900, .8), $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $spread $color;
    -moz-box-shadow:inset $top $left $blur $spread $color;
    box-shadow:inset $top $left $blur $spread $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $spread $color;
    -moz-box-shadow: $top $left $blur $spread $color;
    box-shadow: $top $left $blur $spread $color;
  }
}

@mixin btn($btn_bg: $color-link, $btn_border: $color-link, $outline: true, $ghost: false){
  //background: $btn_bg;
  border: 1px solid $btn_border;
  border-radius: $radius;
  color: $white;
  display: inline-block;
  font-size: 1.2em;
  line-height: 1em;
  margin: $spacing auto;
  min-width: 140px;
  padding: $spacing-tight;

  @if $outline{
    border: 1px solid $btn_bg;
  }

  @if $ghost{
    background: $white;
    background: transparentize($white, .8);
  }

  &:hover{
    cursor: pointer;
  }
}

// C
@mixin clearfix {

  &:after {
    content: "";
    display: table;
    clear: both;
  }
}
@mixin cBackground($color1: lighten($cGray400, 80%), $color2: lighten($cGray400, 5%), $deg: 45deg) {
  background-image: linear-gradient($deg, $color1 0%, $color2 100%);
}

// F
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin remSize($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

// MEDIA QUERIES
@mixin media-min($size) {
  @media screen and (min-width: $size) {
    @content;
  }
}
@mixin media-max($size) {
  @media screen and (max-width: $size) {
    @content;
  }
}
